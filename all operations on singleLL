#include <stdio.h>
#include <stdlib.h>
void creation();
void traversal();
void insertion();
struct node
{
    int data;
    struct node*link;
}*ptr,*header,*new;
void main()
{
    int ch;
    header=(struct node*)malloc(sizeof(struct node));
    header->link=NULL;
    while(1)
    {
        printf("\n enter the choice of operation 1.creation,2.traversal, 3.insertion");
        scanf("%d",&ch);
        switch(ch)
        {
            case 1:creation();
                   break;
            case 2:traversal();
                   break;
            case 3:insertion();
                   break;
            default:exit(0);
        }
    }
}
void creation()
{
    int x;
    printf("enter the data value to be inserted");
    scanf("%d",&x);
    new=(struct node*)malloc(sizeof(struct node));
    if(header->link==NULL)
    {
        header->link=new;
        new->link=NULL;
        new->data=x;
    }
    else
    {
        ptr=header;
        while(ptr->link!=NULL)
        {
            ptr=ptr->link;
        }
        ptr->link=new;
        new->link=NULL;
        new->data=x;
    }
}
void traversal()
{
    printf("\n elements in the list are");
    ptr=header;
    while(ptr->link!=NULL)
    {
        ptr=ptr->link;
        printf("%d",ptr->data);
    }
}
void insertion()
{
    int x,key,ch;
    printf("\n enter key value to be inserted");
    scanf("%d",&x);
    printf("\n insertion at 1.beginning 2.ending 3.any position");
    scanf("%d",&ch);
    switch(ch)
    {
      case 1:new=(struct node*)malloc(sizeof(struct node));
             if(new==NULL)
             {
                 printf("node is not created");
             }
             else
             {
                 new->link=header->link;
                 header->link=new;
                 new->data=x;
             }
             break;
      case 2:new=(struct node*)malloc(sizeof(struct node));
             if(new==NULL)
             {
                 printf("node is not created");
             }
             else
             {
                 ptr=header;
                 while(ptr->link!=NULL)
                 {
                     ptr=ptr->link;
                 }
                 ptr->link=new;
                 new->link=NULL;
                 new->data=x;
             }
             break;
       case 3:printf("enter key value");
              scanf("%d",&key);
         new=(struct node*)malloc(sizeof(struct node));
         if(new==NULL)
         {
             printf("node is not created");
         }
         else
         {
             ptr=header;
             while(ptr->link!=NULL&&ptr->data!=key)
             {
                 ptr=ptr->link;
             }
             if(ptr->link==NULL&&ptr->data!=key)
             {
                 printf("required node with data part as key value is not available ,so unable to process");
             }
             else
             {
                 new->link=ptr->link;
                 ptr->link=new;
                 new->data=x;
             }
             break;
         }
         default:exit(0);
         
    }
}
